plugins {
    id 'java-library'
    // https://github.com/melix/jmh-gradle-plugin
    id "me.champeau.jmh" version "0.6.6"
    id 'jacoco'

    id 'maven-publish'
    id 'signing'
}

group 'io.github.werthersechte'
version '1.4'

sourceCompatibility = 16

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.discord4j:discord4j-core:3.2.3"

    jmh 'org.openjdk.jmh:jmh-core:1.34'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.34'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.8.1'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.22.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.4.0'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '4.4.0'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        csv.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/ai/**',
                              '**/gui/**'])
        }))
    }
}

// maven central deploy

java {
    withSourcesJar()
    withJavadocJar()
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign publishing.publications
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            groupId = project.group.toString()
            artifactId = project.name
            version = project.version.toString()

            from components.java

            pom {
                name = project.name
                description = "A cathedral implementation in Java"
                url = "https://github.com/WerthersEchte/cathedral"
                licenses {
                    license {
                        name = "The Unlicense"
                        url = "https://unlicense.org"
                    }
                }
                developers {
                    developer {
                        id = "WerthersEchte"
                        name = "Eike Petersen"
                        email = "epetersen@gmx.li"
                    }
                }
                scm {
                    url = "https://github.com/WerthersEchte/cathedral"

                    connection = "scm:git:git://github.com/WerthersEchte/cathedral.git"

                    developerConnection = "scm:git:git://github.com/WerthersEchte/cathedral.git"

                }
                issueManagement {
                    url = "https://github.com/WerthersEchte/cathedral/issues"
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username ossrhUsername
                password ossrhPassword
            }

            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}